# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten
# pentagonal numbers are:
# 
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
# 
# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
# 70 − 22 = 48, is not pentagonal.
# 
# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
# difference are pentagonal and D = |Pk − Pj| is minimised; what is the value
# of D?

using ProjectEulerSolutions

# Calculate pentagonal numbers, store in set, then check for whether
# differences and additions are also in the set.  Could probably be faster if
# searchsorted was used and the minimum bound for j was a function of i.
function p044solution(n::Integer=10)::Integer

    vals = collect(1:n)
    pentagonals = fld.(vals .* (3 .* vals .- 1), 2)
    pentagonalset = Set(pentagonals)

    for i in 4:n
        for j in 3:(i-1)
            if pentagonals[i] - pentagonals[j] in pentagonalset && pentagonals[i] + pentagonals[j] in pentagonalset
                return pentagonals[i] -  pentagonals[j]
            end
        end
    end

    return -1
end

p044 = Problems.Problem(p044solution)

Problems.benchmark(p044, 3000)